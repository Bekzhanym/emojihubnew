import React, { useState, useEffect } from "react";
import EmojiPicker from "emoji-picker-react";
import { ToastContainer, toast } from "react-toastify";
import { FaGithub, FaInstagram,FaLinkedin  } from "react-icons/fa";
 // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–∫–æ–Ω–∫–∏
import "react-toastify/dist/ReactToastify.css";
import "./App.css";

function App() {
  const [selectedEmoji, setSelectedEmoji] = useState(null);
  const [darkMode, setDarkMode] = useState(false);
  const [cart, setCart] = useState([]); // –ö–æ—Ä–∑–∏–Ω–∞ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏
  const [lastClickedEmoji, setLastClickedEmoji] = useState(null); // –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —ç–º–æ–¥–∑–∏

  const onEmojiClick = (emojiData) => {
    const emoji = emojiData.emoji;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —Ç–æ—Ç –∂–µ —Å—Ç–∏–∫–µ—Ä –±—ã–ª –∫–ª–∏–∫–Ω—É—Ç –¥–≤–∞–∂–¥—ã
    if (lastClickedEmoji === emoji) {
      // –ï—Å–ª–∏ —Å—Ç–∏–∫–µ—Ä —É–∂–µ –µ—Å—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω–µ, –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
      if (!cart.includes(emoji)) {
        setCart((prevCart) => [...prevCart, emoji]); // –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É
        toast.success("–≠–º–æ–¥–∑–∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!");
      } else {
        toast.info("–≠—Ç–æ—Ç —ç–º–æ–¥–∑–∏ —É–∂–µ –≤ –∫–æ—Ä–∑–∏–Ω–µ!");
      }

      setLastClickedEmoji(null); // –°–±—Ä–æ—Å–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —ç–º–æ–¥–∑–∏ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É
    } else {
      setLastClickedEmoji(emoji); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —ç–º–æ–¥–∑–∏
      toast.info("–ù–∞–∂–º–∏—Ç–µ —Å–Ω–æ–≤–∞ –Ω–∞ —ç—Ç–æ—Ç —Å—Ç–∏–∫–µ—Ä, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –≤ –∫–æ—Ä–∑–∏–Ω—É");
    }

    setSelectedEmoji(emoji); // –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —ç–º–æ–¥–∑–∏
  };

  const toggleTheme = () => {
    setDarkMode(!darkMode);
  };

  const removeFromCart = (emojiToRemove) => {
    setCart(cart.filter((emoji) => emoji !== emojiToRemove)); // –£–¥–∞–ª—è–µ–º —ç–º–æ–¥–∑–∏ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
    toast.info("–≠–º–æ–¥–∑–∏ —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã!");
  };

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º useEffect –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–∞ –∫ body
  useEffect(() => {
    if (darkMode) {
      document.body.classList.add("dark-theme");
      document.body.classList.remove("light-theme");
    } else {
      document.body.classList.add("light-theme");
      document.body.classList.remove("dark-theme");
    }
  }, [darkMode]);

  return (
    <div className="app">
      {/* –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ Instagram –∏ GitHub –≤ –≤–µ—Ä—Ö–Ω—é—é —á–∞—Å—Ç—å */}
      <div className="social-buttons">
        <a href="https://github.com/Bekzhanym" target="_blank" rel="noopener noreferrer">
          <FaGithub size={60} />
        </a>
        <a href="https://instagram.com/bekzhzz" target="_blank" rel="noopener noreferrer">
          <FaInstagram size={60} />
        </a>
        <a href="https://www.linkedin.com/in/bekzhanmaukenov/" target="_blank" rel="noopener noreferrer">
          <FaLinkedin size={60} />
        </a>
      </div>

      <button className="toggle-button" onClick={toggleTheme}>
        {darkMode ? "üåû –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞" : "üåô –¢—ë–º–Ω–∞—è —Ç–µ–º–∞"}
      </button>

      <h1>Emoji Hub</h1>
      <h2>By Bekzhan Maukenov</h2>
      <p>–í—ã–±–µ—Ä–∏—Ç–µ —ç–º–æ–¥–∑–∏ –∏ –æ–Ω –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≤–∞—à—É –∫–æ—Ä–∑–∏–Ω—É –ø—Ä–∏ –¥–≤–æ–π–Ω–æ–º –∫–ª–∏–∫–µ!</p>

      <div className="cart-container">
        <h3>–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ (–ò–∑–±—Ä–∞–Ω–Ω–æ–µ)</h3>
        {cart.length > 0 ? (
          <div className="cart-items">
            {cart.map((emoji, index) => (
              <div key={index} className="cart-item">
                <span>{emoji}</span>
                <button onClick={() => removeFromCart(emoji)}>‚úÖ</button>
              </div>
            ))}
          </div>
        ) : (
          <p>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>
        )}
      </div>

      <div className="emoji-picker-container">
        <p>–í—ã–±–µ—Ä–∏—Ç–µ —ç–º–æ–¥–∑–∏:</p>
        <EmojiPicker onEmojiClick={onEmojiClick} />
      </div>

      {selectedEmoji && (
        <p className="selected-emoji">–í—ã –≤—ã–±—Ä–∞–ª–∏: {selectedEmoji}</p>
      )}

      <ToastContainer position="top-center" />
    </div>
  );
}

export default App;
